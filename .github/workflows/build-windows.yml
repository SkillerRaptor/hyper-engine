name: build-windows

on: [ push, pull_request ]

jobs:
  build-windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: cmd
    env:
      conan_user_home: "${{ github.workspace }}/conan-cache"
      vulkan_sdk: "$GITHUB_WORKSPACE/vulkan_sdk/"
      vulkan_version: "1.2.131.1"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Windows MSVC Debug",
            artifact: "windows-msvc-debug.zip",
            cc: "cl",
            cxx: "cl",
            cmake_build_options: "--config Debug",
            cmake_configure_options: '-G "Visual Studio 16 2019" -A x64',
            build_type: "Debug"
          }
          - {
            name: "Windows MSVC Release",
            artifact: "windows-msvc-release.zip",
            cc: "cl",
            cxx: "cl",
            cmake_build_options: "--config Release",
            cmake_configure_options: '-G "Visual Studio 16 2019" -A x64',
            build_type: "Release"
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cache
        uses: actions/cache@v2
        env:
          cache-name: cache-conan-modules
        with:
          path: |
            ${{ env.conan_user_home }}
          key: ${{ runner.os }}-${{ matrix.config.build_type }}-${{ hashFiles('CMakeLists.txt') }}-${{ hashFiles('Development/CMake/Conan.cmake') }}

      - name: Install Conan
        shell: bash
        run: |
          python3 -m pip install --upgrade pip setuptools
          python3 -m pip install conan

      - name: Install Vulkan SDK
        run: |
          curl -LS -o vulkansdk.exe https://sdk.lunarg.com/sdk/download/${{ env.vulkan_version }}/windows/VulkanSDK-${{ env.vulkan_version }}-Installer.exe?Human=true
          7z x vulkansdk.exe -o"${{ env.vulkan_sdk }}"

      - name: Configure CMake
        run: |
          set CC=${{ matrix.config.cc }}
          set CXX=${{ matrix.config.cxx }}
          set PATH=%PATH%;${{ env.vulkan_sdk }}\;${{ env.vulkan_sdk }}\Bin\

          cmake . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.config.build_type }}

      - name: Build
        run: |
          cmake --build build ${{ matrix.config.cmake_build_options }}

      - name: Test
        working-directory: ${{runner.workspace}}/build
        run: |
          ctest -C ${{ matrix.config.cmake_build_options }}

      - name: Prepare upload
        run: |
          7z a -tzip ${{ matrix.config.artifact }} build/*

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
