name: build-linux

on: [ push, pull_request ]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    defaults:
      run:
        shell: bash
    env:
      vulkan_sdk: "${{ github.workspace }}/vulkan_sdk"
      vulkan_version: "1.2.189.0"
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            name: "Ubuntu Clang Debug",
            artifact: "linux-clang-debug.tar.xz",
            cc: "clang-12",
            cxx: "clang++-12",
            build_type: "Debug"
          }
          - {
            name: "Ubuntu GCC Debug",
            artifact: "linux-gcc-debug.tar.xz",
            cc: "gcc-10",
            cxx: "g++-10",
            build_type: "Debug"
          }
          - {
            name: "Ubuntu Clang Release",
            artifact: "linux-clang-release.tar.xz",
            cc: "clang-12",
            cxx: "clang++-12",
            build_type: "Release"
          }
          - {
            name: "Ubuntu GCC Release",
            artifact: "linux-gcc-release.tar.xz",
            cc: "gcc-10",
            cxx: "g++-10",
            build_type: "Release"
          }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Update environment
        run: |
          sudo apt update -qq
          sudo apt install -y \
            clang-12 \
            cmake \
            gcc-10 \
            g++-10 \
            libgl1-mesa-dev \
            xorg-dev

      - name: Install Vulkan SDK
        run: |
          curl -LS -o vulkansdk.tar.gz https://sdk.lunarg.com/sdk/download/${{ env.vulkan_version }}/linux/vulkansdk-linux-x86_64-${{ env.vulkan_version }}.tar.gz

          mkdir "${{ env.vulkan_sdk }}"
          tar xfz vulkansdk.tar.gz -C "${{ env.vulkan_sdk }}"

      - name: Configure CMake
        run: |
          export CC=${{ matrix.config.cc }}
          export CXX=${{ matrix.config.cxx }}
          export VULKAN_SDK="${{ env.vulkan_sdk }}/${{ env.vulkan_version }}/x86_64"
          export PATH=$PATH:$VULKAN_SDK/bin
          export LD_LIBRARY_PATH=$VULKAN_SDK/lib:$LD_LIBRARY_PATH
          export VK_LAYER_PATH=$VULKAN_SDK/etc/explicit_layer.d

          cmake . -B build -D CMAKE_BUILD_TYPE=${{ matrix.config.build_type }} ${{ matrix.config.build_options }}

      - name: Build
        run: |
          cmake --build build --parallel $(nproc)

      - name: Test
        run: |
          cd build
          ctest -C ${{ matrix.config.build_type }}

      - name: Prepare upload
        run: |
          tar cfz ${{ matrix.config.artifact }} build

      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          path: ${{ matrix.config.artifact }}
          name: ${{ matrix.config.artifact }}
